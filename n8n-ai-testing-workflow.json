{
  "meta": {
    "instanceId": "polish-citizenship-ai-testing"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ai-testing-trigger",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "üöÄ AI Testing Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "ai-testing-trigger"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */4 * * *"
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "‚è∞ Scheduled Testing (Every 4 Hours)",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 500]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/api/health",
        "options": {
          "timeout": 10000
        }
      },
      "id": "health-check",
      "name": "ü©∫ System Health Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [460, 400]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"ü©∫ System Health Check\"].json.status}}",
              "operation": "equal",
              "value2": "healthy"
            }
          ]
        }
      },
      "id": "system-ready-check",
      "name": "‚úÖ System Ready?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 400]
    },
    {
      "parameters": {
        "url": "=http://localhost:5000/webhook/run-ui-tests",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'Automated UI testing'}}",
            "features": "={{$json.features || ['ui', 'forms', 'workflows']}}"
          }
        },
        "options": {
          "timeout": 120000
        }
      },
      "id": "ui-functionality-test",
      "name": "üéØ UI Functionality Tests",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [900, 300]
    },
    {
      "parameters": {
        "url": "=http://localhost:5000/webhook/run-ai-verification",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'Automated AI verification'}}",
            "features": "={{$json.features || ['general']}}"
          }
        },
        "options": {
          "timeout": 180000
        }
      },
      "id": "ai-verification",
      "name": "ü§ñ Triple AI Verification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"üéØ UI Functionality Tests\"].json.uiPassRate}}",
              "operation": "smallerEqual",
              "value2": 80
            }
          ],
          "boolean": [
            {
              "value1": "={{$node[\"ü§ñ Triple AI Verification\"].json.hasIssues}}",
              "operation": "equal",
              "value2": true
            }
          ],
          "combineOperation": "any"
        }
      },
      "id": "needs-autofix-check",
      "name": "üîç Issues Found?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "url": "=http://localhost:5000/webhook/run-rule-four-autofix",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'Auto-fix automation'}}",
            "features": "={{$json.features || ['autofix']}}",
            "maxIterations": 5
          }
        },
        "options": {
          "timeout": 600000
        }
      },
      "id": "rule-four-autofix",
      "name": "üî¥ Rule Four Auto-Fix",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "url": "=http://localhost:5000/webhook/final-verification",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'Final verification'}}",
            "previousResults": "={{$json}}"
          }
        },
        "options": {
          "timeout": 60000
        }
      },
      "id": "final-verification",
      "name": "‚úÖ Final Verification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"‚úÖ Final Verification\"].json.finalVerdict}}",
              "operation": "equal",
              "value2": "PERFECT"
            }
          ]
        }
      },
      "id": "success-check",
      "name": "üéâ Success?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "subject": "üéâ AI Testing SUCCESS - Everything Works Perfectly!",
        "message": "=Task: {{$json.taskDescription}}\n\n‚úÖ UI Tests: {{$node[\"üéØ UI Functionality Tests\"].json.passRate}}% pass rate\nü§ñ AI Verification: {{$node[\"ü§ñ Triple AI Verification\"].json.overallScore}}% score\nüî¥ Auto-Fix: {{$node[\"üî¥ Rule Four Auto-Fix\"].json.success ? 'SUCCESS' : 'N/A'}}\n‚úÖ Final Result: {{$node[\"‚úÖ Final Verification\"].json.finalVerdict}}\n\nüéØ NO MANUAL FIXES NEEDED - Task implemented perfectly!\n\nTime: {{new Date().toLocaleString()}}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "success-notification",
      "name": "üìß Success Notification",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [2220, 200]
    },
    {
      "parameters": {
        "subject": "‚ö†Ô∏è AI Testing - Issues Found (Auto-Fixed)",
        "message": "=Task: {{$json.taskDescription}}\n\nüéØ UI Tests: {{$node[\"üéØ UI Functionality Tests\"].json.passRate}}% pass rate\nü§ñ AI Verification: {{$node[\"ü§ñ Triple AI Verification\"].json.overallScore}}% score\nüî¥ Auto-Fix: {{$node[\"üî¥ Rule Four Auto-Fix\"].json.fixesApplied || 0}} fixes applied\n‚úÖ Final Result: {{$node[\"‚úÖ Final Verification\"].json.finalVerdict}}\n\nIssues found and {{$node[\"üî¥ Rule Four Auto-Fix\"].json.success ? 'automatically fixed' : 'partially fixed'}}.\n\n{{$node[\"üî¥ Rule Four Auto-Fix\"].json.success ? '‚úÖ Task should work correctly now.' : '‚ö†Ô∏è Some manual review may be needed.'}}\n\nTime: {{new Date().toLocaleString()}}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "issues-notification",
      "name": "üìß Issues Notification",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [2220, 400]
    },
    {
      "parameters": {
        "subject": "‚ùå AI Testing FAILED - Critical Issues",
        "message": "=Task: {{$json.taskDescription}}\n\n‚ùå CRITICAL FAILURE\n\nSystem Status: {{$node[\"ü©∫ System Health Check\"].json.status || 'UNKNOWN'}}\n\nThe automated AI testing system could not complete verification.\n\nThis typically means:\n- System is not responding\n- Critical infrastructure issues\n- Testing scripts are broken\n\nMANUAL INTERVENTION REQUIRED\n\nTime: {{new Date().toLocaleString()}}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "failure-notification",
      "name": "üìß Failure Notification",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [900, 600]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"completed\",\n  \"verdict\": \"{{$node[\"‚úÖ Final Verification\"].json.finalVerdict}}\",\n  \"timestamp\": \"{{new Date().toISOString()}}\",\n  \"results\": {\n    \"uiTesting\": {{$node[\"üéØ UI Functionality Tests\"].json}},\n    \"aiVerification\": {{$node[\"ü§ñ Triple AI Verification\"].json}},\n    \"autoFix\": {{$node[\"üî¥ Rule Four Auto-Fix\"].json || {}}},\n    \"finalVerification\": {{$node[\"‚úÖ Final Verification\"].json}}\n  }\n}"
      },
      "id": "webhook-response",
      "name": "üì§ Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2220, 300]
    }
  ],
  "connections": {
    "üöÄ AI Testing Webhook": {
      "main": [
        [
          {
            "node": "ü©∫ System Health Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è∞ Scheduled Testing (Every 4 Hours)": {
      "main": [
        [
          {
            "node": "ü©∫ System Health Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü©∫ System Health Check": {
      "main": [
        [
          {
            "node": "‚úÖ System Ready?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ System Ready?": {
      "main": [
        [
          {
            "node": "üéØ UI Functionality Tests",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìß Failure Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üéØ UI Functionality Tests": {
      "main": [
        [
          {
            "node": "ü§ñ Triple AI Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ Triple AI Verification": {
      "main": [
        [
          {
            "node": "üîç Issues Found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Issues Found?": {
      "main": [
        [
          {
            "node": "üî¥ Rule Four Auto-Fix",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚úÖ Final Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üî¥ Rule Four Auto-Fix": {
      "main": [
        [
          {
            "node": "‚úÖ Final Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Final Verification": {
      "main": [
        [
          {
            "node": "üéâ Success?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üéâ Success?": {
      "main": [
        [
          {
            "node": "üìß Success Notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "üì§ Webhook Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìß Issues Notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "üì§ Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-08T10:45:00.000Z",
      "updatedAt": "2024-09-08T10:45:00.000Z",
      "id": "ai-testing",
      "name": "AI Testing Automation"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-09-08T10:45:00.000Z",
  "versionId": "1"
}