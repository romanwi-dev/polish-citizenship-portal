/* ================================================
   FORMS & INPUT SYSTEM
   ================================================ */

.field {
  display: grid;
  gap: 6px;
  margin-bottom: 16px;
}

.label {
  font-weight: 600;
  font-size: 13px;
  color: var(--muted);
  margin-bottom: 4px;
}

.label.required::after {
  content: ' *';
  color: var(--err);
}

/* Input Styles */
.input, .select, .textarea {
  width: 100%;
  background: var(--surface-strong);
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 10px 12px;
  font-size: var(--base);
  font-family: var(--font);
  transition: border-color var(--timing-fast),
              box-shadow var(--timing-fast),
              background var(--timing-fast);
  min-height: 44px; /* Touch target */
}

.input:focus, .select:focus, .textarea:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--accent) 20%, transparent);
  background: var(--glass);
}

.input:disabled, .select:disabled, .textarea:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background: var(--surface);
}

.input.error, .select.error, .textarea.error {
  border-color: var(--err);
}

.input.error:focus, .select.error:focus, .textarea.error:focus {
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--err) 20%, transparent);
}

/* Input Variants */
.input-sm {
  padding: 8px 10px;
  font-size: 14px;
  min-height: 36px;
}

.input-lg {
  padding: 14px 16px;
  font-size: 16px;
  min-height: 52px;
}

/* Textarea */
.textarea {
  min-height: 100px;
  resize: vertical;
  font-family: var(--font);
  line-height: 1.5;
}

/* Select */
.select {
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 8px center;
  background-repeat: no-repeat;
  background-size: 16px;
  padding-right: 32px;
}

/* Checkbox */
.checkbox {
  width: 18px;
  height: 18px;
  accent-color: var(--accent);
  cursor: pointer;
  margin-right: 8px;
}

.checkbox-wrapper {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  min-height: 44px; /* Touch target */
}

.checkbox-wrapper:hover .checkbox {
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--accent) 15%, transparent);
}

/* Radio Buttons */
.radio {
  width: 18px;
  height: 18px;
  accent-color: var(--accent);
  cursor: pointer;
  margin-right: 8px;
}

.radio-group {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.radio-wrapper {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  min-height: 44px; /* Touch target */
}

/* Toggle Switch */
.toggle {
  appearance: none;
  width: 44px;
  height: 26px;
  border-radius: 999px;
  background: var(--surface-strong);
  position: relative;
  border: 1px solid var(--border);
  cursor: pointer;
  transition: background var(--timing-fast),
              border-color var(--timing-fast);
}

.toggle:checked {
  background: color-mix(in oklab, var(--accent) 50%, transparent);
  border-color: var(--accent);
}

.toggle::after {
  content: '';
  position: absolute;
  top: 3px;
  left: 3px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #fff;
  transition: left var(--timing-fast) var(--spring-1);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.toggle:checked::after {
  left: 21px;
}

.toggle:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* Input Groups */
.input-group {
  display: flex;
  align-items: stretch;
}

.input-group .input {
  border-radius: 0;
  border-right: 0;
}

.input-group .input:first-child {
  border-top-left-radius: 12px;
  border-bottom-left-radius: 12px;
}

.input-group .input:last-child {
  border-top-right-radius: 12px;
  border-bottom-right-radius: 12px;
  border-right: 1px solid var(--border);
}

.input-group .btn {
  border-radius: 0;
  border-left: 0;
}

.input-group .btn:last-child {
  border-top-right-radius: 12px;
  border-bottom-right-radius: 12px;
}

/* Form Groups */
.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}

@media (max-width: 640px) {
  .form-row {
    grid-template-columns: 1fr;
  }
}

.form-section {
  margin-bottom: 24px;
  padding: 16px;
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius-card);
}

.form-section-title {
  font-size: var(--title);
  font-weight: 700;
  color: var(--text);
  margin-bottom: 16px;
  padding-bottom: 8px;
  border-bottom: 1px solid var(--border);
}

/* Error Messages */
.error-message {
  color: var(--err);
  font-size: 12px;
  margin-top: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
}

.success-message {
  color: var(--ok);
  font-size: 12px;
  margin-top: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
}

/* Help Text */
.help-text {
  color: var(--muted);
  font-size: 12px;
  margin-top: 4px;
}

/* File Upload */
.file-upload {
  border: 2px dashed var(--border);
  border-radius: var(--radius-card);
  padding: 24px;
  text-align: center;
  cursor: pointer;
  transition: border-color var(--timing-fast),
              background var(--timing-fast);
}

.file-upload:hover {
  border-color: var(--accent);
  background: var(--surface);
}

.file-upload.dragover {
  border-color: var(--accent);
  background: color-mix(in oklab, var(--accent) 10%, transparent);
}

.file-upload input[type="file"] {
  display: none;
}

/* Search Input */
.search-input {
  position: relative;
}

.search-input .input {
  padding-left: 40px;
}

.search-input::before {
  content: '';
  position: absolute;
  left: 12px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236b7280'%3e%3cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'/%3e%3c/svg%3e");
  background-size: 16px;
  background-repeat: no-repeat;
  pointer-events: none;
}