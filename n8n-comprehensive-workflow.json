{
  "meta": {
    "instanceId": "polish-citizenship-comprehensive-ai-testing",
    "version": "2.0"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "comprehensive-ai-testing",
        "responseMode": "responseNode",
        "authentication": "headerAuth",
        "options": {
          "allowedOrigins": "http://localhost:5000,https://*.replit.app"
        }
      },
      "id": "webhook-trigger",
      "name": "üöÄ Comprehensive Testing Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "comprehensive-ai-testing"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression", 
              "expression": "0 */2 * * *"
            }
          ]
        }
      },
      "id": "scheduled-testing",
      "name": "‚è∞ Auto Testing (Every 2 Hours)",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 500]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/api/health",
        "options": {
          "timeout": 15000,
          "retry": {
            "enabled": true,
            "maxAttempts": 3,
            "waitBetween": 2000
          }
        }
      },
      "id": "system-health-check",
      "name": "ü©∫ System Health & Security Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [460, 400]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"ü©∫ System Health & Security Check\"].json.status}}",
              "operation": "equal",
              "value2": "ok"
            }
          ],
          "boolean": [
            {
              "value1": "={{$node[\"ü©∫ System Health & Security Check\"].json.webhooksEnabled}}",
              "operation": "equal",
              "value2": true
            }
          ]
        }
      },
      "id": "system-ready-gate",
      "name": "‚úÖ System Ready & Secure?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 400]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/webhook/run-ui-tests",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'N8N Comprehensive UI Testing'}}",
            "features": "={{$json.features || ['ui', 'forms', 'workflows', 'mobile']}}",
            "enforceRules": true,
            "securityLevel": "maximum"
          }
        },
        "options": {
          "timeout": 180000,
          "retry": {
            "enabled": true,
            "maxAttempts": 2,
            "waitBetween": 5000
          }
        }
      },
      "id": "rule-1-ui-testing",
      "name": "üî¥ RULE 1: UI Functionality Tests",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [900, 200]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/webhook/run-ai-verification",
        "method": "POST", 
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'N8N Triple AI Verification'}}",
            "features": "={{$json.features || ['claude', 'openai', 'grok']}}",
            "enforceTripleCheck": true,
            "verificationLevel": "comprehensive"
          }
        },
        "options": {
          "timeout": 300000,
          "retry": {
            "enabled": true,
            "maxAttempts": 2,
            "waitBetween": 10000
          }
        }
      },
      "id": "rule-2-triple-ai",
      "name": "üî¥ RULE 2: Triple AI Verification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/webhook/cache-cleanup",
        "method": "POST",
        "body": {
          "parameters": {
            "cleanupLevel": "comprehensive",
            "serverMaintenance": true,
            "securityScan": true
          }
        },
        "options": {
          "timeout": 60000
        }
      },
      "id": "rule-3-maintenance",
      "name": "üî¥ RULE 3: Cache Cleanup & Maintenance",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/webhook/grok-verification",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'N8N Grok Architecture Verification'}}",
            "verificationScope": "architecture",
            "deepAnalysis": true
          }
        },
        "options": {
          "timeout": 180000
        }
      },
      "id": "rule-x-grok",
      "name": "üî¥ RULE X: Mandatory Grok Verification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.uiPassRate}}",
              "operation": "smaller",
              "value2": 95
            },
            {
              "value1": "={{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.overallScore}}",
              "operation": "smaller", 
              "value2": 90
            }
          ],
          "boolean": [
            {
              "value1": "={{$node[\"üî¥ RULE X: Mandatory Grok Verification\"].json.hasIssues}}",
              "operation": "equal",
              "value2": true
            }
          ],
          "combineOperation": "any"
        }
      },
      "id": "issues-detection",
      "name": "üîç Critical Issues Detected?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1780, 200]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/webhook/rule-four-autofix",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'N8N Auto-Fix Enforcement'}}",
            "maxIterations": 10,
            "stopOnSuccess": true,
            "aggressive": true,
            "enforceUntilPerfect": true,
            "issuesContext": {
              "uiIssues": "={{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.issues}}",
              "aiIssues": "={{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.issues}}",
              "grokIssues": "={{$node[\"üî¥ RULE X: Mandatory Grok Verification\"].json.issues}}"
            }
          }
        },
        "options": {
          "timeout": 900000
        }
      },
      "id": "rule-4-autofix",
      "name": "üî¥ RULE 4: Superior Auto-Fix Until Perfect",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2000, 100]
    },
    {
      "parameters": {
        "url": "http://localhost:5000/webhook/final-comprehensive-verification",
        "method": "POST",
        "body": {
          "parameters": {
            "taskDescription": "={{$json.taskDescription || 'N8N Final Comprehensive Verification'}}",
            "previousResults": {
              "rule1": "={{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json}}",
              "rule2": "={{$node[\"üî¥ RULE 2: Triple AI Verification\"].json}}",
              "rule3": "={{$node[\"üî¥ RULE 3: Cache Cleanup & Maintenance\"].json}}",
              "ruleX": "={{$node[\"üî¥ RULE X: Mandatory Grok Verification\"].json}}",
              "rule4": "={{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json || {}}}"
            },
            "requirePerfection": true
          }
        },
        "options": {
          "timeout": 120000
        }
      },
      "id": "final-verification",
      "name": "‚úÖ Final Comprehensive Verification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [2220, 200]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"‚úÖ Final Comprehensive Verification\"].json.finalVerdict}}",
              "operation": "equal",
              "value2": "PERFECT"
            }
          ]
        }
      },
      "id": "perfection-check",
      "name": "üéØ Perfection Achieved?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [2440, 200]
    },
    {
      "parameters": {
        "subject": "üéâ PERFECT! No Manual Checking Required!",
        "message": "=üéØ TASK: {{$json.taskDescription}}\n\nüî¥ ALL MANDATORY RULES ENFORCED:\n‚úÖ Rule 1 - UI Testing: {{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.uiPassRate}}%\n‚úÖ Rule 2 - Triple AI: {{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.overallScore}}%\n‚úÖ Rule 3 - Maintenance: COMPLETED\n‚úÖ Rule X - Grok: {{$node[\"üî¥ RULE X: Mandatory Grok Verification\"].json.architectureScore || 'VERIFIED'}}%\n‚úÖ Rule 4 - Auto-Fix: {{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json.success ? 'SUCCESS' : 'N/A'}}\n\nüéâ RESULT: PERFECT IMPLEMENTATION!\nüì± NO MANUAL PHONE CHECKING REQUIRED!\nüöÄ YOUR PROJECT IS READY TO DEPLOY!\n\nTime: {{new Date().toLocaleString()}}\nAt your age of 58, time is precious - this task is DONE! ‚úÖ",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "perfect-notification",
      "name": "üìß Perfect - No Manual Check Needed!",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [2660, 100]
    },
    {
      "parameters": {
        "subject": "‚ö†Ô∏è Issues Auto-Fixed - Quick Review Recommended", 
        "message": "=üéØ TASK: {{$json.taskDescription}}\n\nüî¥ MANDATORY RULES STATUS:\n{{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.uiPassRate < 95 ? '‚ö†Ô∏è' : '‚úÖ'}} Rule 1 - UI Testing: {{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.uiPassRate}}%\n{{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.overallScore < 90 ? '‚ö†Ô∏è' : '‚úÖ'}} Rule 2 - Triple AI: {{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.overallScore}}%\n‚úÖ Rule 3 - Maintenance: COMPLETED\n{{$node[\"üî¥ RULE X: Mandatory Grok Verification\"].json.hasIssues ? '‚ö†Ô∏è' : '‚úÖ'}} Rule X - Grok: VERIFIED\n{{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json.success ? '‚úÖ' : '‚ö†Ô∏è'}} Rule 4 - Auto-Fix: {{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json.fixesApplied || 0}} fixes applied\n\nüìä FINAL RESULT: {{$node[\"‚úÖ Final Comprehensive Verification\"].json.finalVerdict}}\n\n{{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json.success ? '‚úÖ Most issues auto-fixed - minimal manual check needed' : '‚ö†Ô∏è Some issues require your attention'}}\n\nüï∞Ô∏è At 58, your time matters - this saves you hours of manual checking!\n\nTime: {{new Date().toLocaleString()}}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "issues-fixed-notification",
      "name": "üìß Issues Fixed - Minimal Check Needed",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [2660, 300]
    },
    {
      "parameters": {
        "subject": "‚ùå CRITICAL: System Down - Immediate Attention Required",
        "message": "=üö® CRITICAL SYSTEM FAILURE\n\nTask: {{$json.taskDescription}}\n\n‚ùå System Status: {{$node[\"ü©∫ System Health & Security Check\"].json.status || 'UNKNOWN'}}\n‚ùå Webhooks: {{$node[\"ü©∫ System Health & Security Check\"].json.webhooksEnabled || 'DISABLED'}}\n\nüö® The Polish Citizenship application is not responding properly.\n\nThis requires IMMEDIATE manual intervention:\n1. Check server status\n2. Restart workflows if needed\n3. Verify database connections\n\n‚è∞ Time is precious at 58 - but this needs your immediate attention!\n\nTime: {{new Date().toLocaleString()}}\nSystem uptime: {{$node[\"ü©∫ System Health & Security Check\"].json.uptime || 'UNKNOWN'}}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "critical-failure-alert",
      "name": "üìß CRITICAL: Manual Intervention Required",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [900, 600]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"completed\",\n  \"timestamp\": \"{{new Date().toISOString()}}\",\n  \"verdict\": \"{{$node[\"‚úÖ Final Comprehensive Verification\"].json.finalVerdict}}\",\n  \"mandatoryRules\": {\n    \"rule1_ui_testing\": {\n      \"status\": \"{{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.uiPassRate >= 95 ? 'PASSED' : 'NEEDS_ATTENTION'}}\",\n      \"passRate\": {{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.uiPassRate}},\n      \"issues\": {{$node[\"üî¥ RULE 1: UI Functionality Tests\"].json.issues}}\n    },\n    \"rule2_triple_ai\": {\n      \"status\": \"{{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.overallScore >= 90 ? 'PASSED' : 'NEEDS_ATTENTION'}}\",\n      \"overallScore\": {{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.overallScore}},\n      \"claude\": {{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.claude}},\n      \"openai\": {{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.openai}},\n      \"grok\": {{$node[\"üî¥ RULE 2: Triple AI Verification\"].json.grok}}\n    },\n    \"rule3_maintenance\": {\n      \"status\": \"COMPLETED\",\n      \"cacheCleared\": true,\n      \"serverMaintained\": true\n    },\n    \"ruleX_grok\": {\n      \"status\": \"{{$node[\"üî¥ RULE X: Mandatory Grok Verification\"].json.hasIssues ? 'ISSUES_FOUND' : 'VERIFIED'}}\",\n      \"architectureScore\": {{$node[\"üî¥ RULE X: Mandatory Grok Verification\"].json.architectureScore || 100}}\n    },\n    \"rule4_autofix\": {\n      \"status\": \"{{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json.success ? 'SUCCESS' : 'PARTIAL'}}\",\n      \"iterations\": {{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json.iterations || 0}},\n      \"fixesApplied\": {{$node[\"üî¥ RULE 4: Superior Auto-Fix Until Perfect\"].json.fixesApplied || 0}}\n    }\n  },\n  \"manualCheckRequired\": \"{{$node[\"‚úÖ Final Comprehensive Verification\"].json.finalVerdict !== 'PERFECT'}}\",\n  \"deploymentReady\": \"{{$node[\"‚úÖ Final Comprehensive Verification\"].json.finalVerdict === 'PERFECT'}}\",\n  \"message\": \"{{$node[\"‚úÖ Final Comprehensive Verification\"].json.finalVerdict === 'PERFECT' ? 'No manual checking required - ready to deploy!' : 'Some manual review recommended'}}\"\n}"
      },
      "id": "comprehensive-response",
      "name": "üì§ Comprehensive Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2880, 200]
    }
  ],
  "connections": {
    "üöÄ Comprehensive Testing Webhook": {
      "main": [
        [
          {
            "node": "ü©∫ System Health & Security Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è∞ Auto Testing (Every 2 Hours)": {
      "main": [
        [
          {
            "node": "ü©∫ System Health & Security Check", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü©∫ System Health & Security Check": {
      "main": [
        [
          {
            "node": "‚úÖ System Ready & Secure?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ System Ready & Secure?": {
      "main": [
        [
          {
            "node": "üî¥ RULE 1: UI Functionality Tests",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìß CRITICAL: Manual Intervention Required",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üî¥ RULE 1: UI Functionality Tests": {
      "main": [
        [
          {
            "node": "üî¥ RULE 2: Triple AI Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üî¥ RULE 2: Triple AI Verification": {
      "main": [
        [
          {
            "node": "üî¥ RULE 3: Cache Cleanup & Maintenance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üî¥ RULE 3: Cache Cleanup & Maintenance": {
      "main": [
        [
          {
            "node": "üî¥ RULE X: Mandatory Grok Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üî¥ RULE X: Mandatory Grok Verification": {
      "main": [
        [
          {
            "node": "üîç Critical Issues Detected?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Critical Issues Detected?": {
      "main": [
        [
          {
            "node": "üî¥ RULE 4: Superior Auto-Fix Until Perfect",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚úÖ Final Comprehensive Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üî¥ RULE 4: Superior Auto-Fix Until Perfect": {
      "main": [
        [
          {
            "node": "‚úÖ Final Comprehensive Verification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Final Comprehensive Verification": {
      "main": [
        [
          {
            "node": "üéØ Perfection Achieved?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üéØ Perfection Achieved?": {
      "main": [
        [
          {
            "node": "üìß Perfect - No Manual Check Needed!",
            "type": "main",
            "index": 0
          },
          {
            "node": "üì§ Comprehensive Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìß Issues Fixed - Minimal Check Needed",
            "type": "main",
            "index": 0
          },
          {
            "node": "üì§ Comprehensive Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-08T10:55:00.000Z",
      "updatedAt": "2025-09-08T10:55:00.000Z", 
      "id": "comprehensive-ai-testing",
      "name": "Comprehensive AI Testing - All Rules"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2025-09-08T10:55:00.000Z",
  "versionId": "2.0"
}